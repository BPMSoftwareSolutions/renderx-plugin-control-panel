name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  validate:
    name: Validate Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run full test suite
      run: |
        npm run typecheck
        npm run lint
        npm run test:run
        npm run build
        
    - name: Validate package.json version
      if: github.event_name == 'push'
      run: |
        TAG_VERSION=${GITHUB_REF#refs/tags/v}
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
          echo "❌ Tag version ($TAG_VERSION) doesn't match package.json version ($PACKAGE_VERSION)"
          exit 1
        fi
        echo "✅ Version validation passed: $TAG_VERSION"

  build:
    name: Build Release
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for production
      run: npm run build
      
    - name: Create release package
      run: |
        # Create a clean package for release
        mkdir -p release-package
        cp -r dist/ release-package/
        cp package.json release-package/
        cp README.md release-package/ 2>/dev/null || echo "README.md not found, skipping"
        cp LICENSE release-package/ 2>/dev/null || echo "LICENSE not found, skipping"
        
    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-package
        path: release-package/
        retention-days: 30

  publish:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download release artifacts
      uses: actions/download-artifact@v4
      with:
        name: release-package
        path: release-package/
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Publish to NPM
      if: contains(github.ref, 'rc') == false
      run: |
        cd release-package
        npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Publish pre-release to NPM
      if: contains(github.ref, 'rc')
      run: |
        cd release-package
        npm publish --access public --tag beta
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download release artifacts
      uses: actions/download-artifact@v4
      with:
        name: release-package
        path: release-package/
        
    - name: Create release archive
      run: |
        cd release-package
        tar -czf ../renderx-plugin-control-panel-${GITHUB_REF#refs/tags/}.tar.gz .
        
    - name: Generate release notes
      id: release_notes
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "## 🚀 RenderX Plugin Control Panel v$VERSION" > release_notes.md
        echo "" >> release_notes.md
        echo "### ✨ What's New" >> release_notes.md
        echo "- Plugin control panel for RenderX components" >> release_notes.md
        echo "- Dynamic property field generation" >> release_notes.md
        echo "- CSS class management and styling" >> release_notes.md
        echo "- Bidirectional attribute synchronization" >> release_notes.md
        echo "" >> release_notes.md
        echo "### 📦 Installation" >> release_notes.md
        echo "\`\`\`bash" >> release_notes.md
        echo "npm install @renderx-plugins/control-panel@$VERSION" >> release_notes.md
        echo "\`\`\`" >> release_notes.md
        echo "" >> release_notes.md
        echo "### 🔧 Technical Details" >> release_notes.md
        echo "- Built with TypeScript and React" >> release_notes.md
        echo "- Comprehensive test suite (76% coverage)" >> release_notes.md
        echo "- ESLint configured for code quality" >> release_notes.md
        echo "- Modern build tooling with tsup" >> release_notes.md
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        body_path: release_notes.md
        files: |
          renderx-plugin-control-panel-*.tar.gz
        prerelease: ${{ contains(github.ref, 'rc') }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
