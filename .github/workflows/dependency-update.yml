name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Check for outdated packages
      id: outdated
      run: |
        npm outdated --json > outdated.json || true
        if [ -s outdated.json ]; then
          echo "has_updates=true" >> $GITHUB_OUTPUT
          echo "📦 Found outdated packages:"
          cat outdated.json | jq -r 'to_entries[] | "\(.key): \(.value.current) → \(.value.wanted)"'
        else
          echo "has_updates=false" >> $GITHUB_OUTPUT
          echo "✅ All packages are up to date"
        fi
        
    - name: Update patch and minor versions
      if: steps.outdated.outputs.has_updates == 'true'
      run: |
        # Update patch and minor versions (safe updates)
        npm update
        
        # Check if package-lock.json was modified
        if git diff --quiet package-lock.json; then
          echo "No safe updates available"
          echo "safe_updates=false" >> $GITHUB_ENV
        else
          echo "Safe updates applied"
          echo "safe_updates=true" >> $GITHUB_ENV
        fi
        
    - name: Run tests after updates
      if: env.safe_updates == 'true'
      run: |
        npm ci
        npm run typecheck
        npm run lint
        npm run test:run
        npm run build
        
    - name: Create Pull Request for safe updates
      if: env.safe_updates == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore(deps): update dependencies to latest patch/minor versions'
        title: '🔄 Automated dependency updates'
        body: |
          ## 🤖 Automated Dependency Updates
          
          This PR contains automated updates to patch and minor versions of dependencies.
          
          ### ✅ What was updated:
          - Patch and minor version updates only (safe updates)
          - All tests pass with the new versions
          - Build completes successfully
          
          ### 🔍 Review checklist:
          - [ ] Verify all CI checks pass
          - [ ] Test the application manually if needed
          - [ ] Check for any breaking changes in changelogs
          
          ### 📋 Updated packages:
          ```
          $(npm outdated --json | jq -r 'to_entries[] | "\(.key): \(.value.current) → \(.value.wanted)"' || echo "See package-lock.json for details")
          ```
          
          ---
          *This PR was created automatically by the dependency update workflow.*
        branch: automated/dependency-updates
        delete-branch: true
        labels: |
          area/deps
          type/chore
          automated
          
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      id: audit
      run: |
        # Run audit and capture output
        npm audit --audit-level=moderate --json > audit-results.json || true
        
        # Check if there are vulnerabilities
        VULN_COUNT=$(cat audit-results.json | jq '.metadata.vulnerabilities.total // 0')
        
        if [ "$VULN_COUNT" -gt 0 ]; then
          echo "vulnerabilities_found=true" >> $GITHUB_OUTPUT
          echo "vulnerability_count=$VULN_COUNT" >> $GITHUB_OUTPUT
          
          echo "🚨 Found $VULN_COUNT vulnerabilities:"
          cat audit-results.json | jq -r '.vulnerabilities // {} | to_entries[] | "\(.key): \(.value.severity)"'
        else
          echo "vulnerabilities_found=false" >> $GITHUB_OUTPUT
          echo "✅ No vulnerabilities found"
        fi
        
    - name: Create security issue
      if: steps.audit.outputs.vulnerabilities_found == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const auditResults = JSON.parse(fs.readFileSync('audit-results.json', 'utf8'));
          
          const vulnerabilities = auditResults.vulnerabilities || {};
          const vulnCount = auditResults.metadata?.vulnerabilities?.total || 0;
          
          let issueBody = `## 🚨 Security Vulnerabilities Detected\n\n`;
          issueBody += `Found **${vulnCount}** security vulnerabilities in dependencies.\n\n`;
          issueBody += `### 📋 Vulnerabilities:\n\n`;
          
          for (const [pkg, vuln] of Object.entries(vulnerabilities)) {
            issueBody += `- **${pkg}**: ${vuln.severity} severity\n`;
            if (vuln.title) issueBody += `  - ${vuln.title}\n`;
            if (vuln.url) issueBody += `  - More info: ${vuln.url}\n`;
          }
          
          issueBody += `\n### 🔧 Recommended Actions:\n\n`;
          issueBody += `1. Run \`npm audit fix\` to automatically fix issues\n`;
          issueBody += `2. Review and update vulnerable packages manually\n`;
          issueBody += `3. Consider alternative packages if fixes aren't available\n\n`;
          issueBody += `### 📊 Audit Details:\n\n`;
          issueBody += `\`\`\`json\n${JSON.stringify(auditResults.metadata, null, 2)}\n\`\`\`\n\n`;
          issueBody += `---\n*This issue was created automatically by the security audit workflow.*`;
          
          // Check if similar issue already exists
          const { data: issues } = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: 'security,automated',
            state: 'open'
          });
          
          if (issues.length === 0) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `🚨 Security vulnerabilities detected (${vulnCount} issues)`,
              body: issueBody,
              labels: ['security', 'priority/high', 'automated']
            });
          } else {
            console.log('Security issue already exists, skipping creation');
          }
